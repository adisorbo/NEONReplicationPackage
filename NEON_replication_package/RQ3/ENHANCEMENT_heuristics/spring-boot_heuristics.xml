<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<heuristics>
<NLP_heuristic>
<sentence type="declarative"/>
<type>dobj</type>
<text>Supports [something].</text>
<conditions>
<condition>dobj.governor="use support"</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>dobj/prep_for</type>
<text>Adds support.</text>
<conditions>
<condition>dobj.governor="add"</condition>
<condition>dobj.dependent="support"</condition>
<condition>dobj.governor=prep_for.governor</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>xcomp</type>
<text>Allows.</text>
<conditions>
<condition>xcomp.governor="allow"</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>aux/dobj</type>
<text>To use [something].</text>
<conditions>
<condition>aux.governor="use"</condition>
<condition>aux.dependent="to"</condition>
<condition>aux.governor=dobj.governor</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>dobj</type>
<text>Configures [something].</text>
<conditions>
<condition>dobj.governor="configure"</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>dobj</type>
<text>Uses [something].</text>
<conditions>
<condition>dobj.governor="apply use"</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>prep_in</type>
<text/>
<conditions>
<condition>prep_in.governor="use support"</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>aux/auxpass/prep_via</type>
<text>To be configured.</text>
<conditions>
<condition>aux.governor="configure"</condition>
<condition>aux.dependent="to"</condition>
<condition>aux.governor=auxpass.governor</condition>
<condition>auxpass.dependent="be"</condition>
<condition>auxpass.governor=prep_via.governor</condition>
<condition>prep_via.dependent="environment"</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>dobj</type>
<text>Investigates [something].</text>
<conditions>
<condition>dobj.governor="investigate"</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>dobj/xcomp/aux</type>
<text>To allow [something] to use.</text>
<conditions>
<condition>dobj.governor="allow"</condition>
<condition>dobj.governor=xcomp.governor</condition>
<condition>xcomp.dependent="use"</condition>
<condition>xcomp.dependent=aux.governor</condition>
<condition>aux.dependent="to"</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>aux/dobj</type>
<text>[auxiliary] use [something].</text>
<conditions>
<condition>aux.governor="apply use"</condition>
<condition>aux.governor=dobj.governor</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>aux/dobj</type>
<text>To configure [something].</text>
<conditions>
<condition>aux.governor="configure"</condition>
<condition>aux.dependent="to"</condition>
<condition>aux.governor=dobj.governor</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>dobj/vmod</type>
<text>Adds option.</text>
<conditions>
<condition>dobj.governor="add"</condition>
<condition>dobj.dependent="option"</condition>
<condition>dobj.governor=vmod.governor</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>nsubjpass/auxpass</type>
<text>Is used.</text>
<conditions>
<condition>nsubjpass.governor="use"</condition>
<condition>nsubjpass.governor=auxpass.governor</condition>
<condition>auxpass.dependent="be"</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>dobj/prep_for</type>
<text>Provides management.</text>
<conditions>
<condition>dobj.governor="provide"</condition>
<condition>dobj.dependent="default management"</condition>
<condition>dobj.governor=prep_for.governor</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>nsubj</type>
<text>[something] makes.</text>
<conditions>
<condition>nsubj.governor="do make"</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>xcomp</type>
<text>Defaults.</text>
<conditions>
<condition>xcomp.governor="use try default"</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>prep_of</type>
<text/>
<conditions>
<condition>prep_of.governor="use"</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>dobj/xcomp/aux/auxpass</type>
<text>[something] to be allowed.</text>
<conditions>
<condition>dobj.governor="allow"</condition>
<condition>dobj.governor=xcomp.governor</condition>
<condition>xcomp.dependent="configure"</condition>
<condition>xcomp.dependent=aux.governor</condition>
<condition>aux.dependent="to"</condition>
<condition>aux.governor=auxpass.governor</condition>
<condition>auxpass.dependent="be"</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>dobj</type>
<text>Makes [something].</text>
<conditions>
<condition>dobj.governor="do make"</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>dobj</type>
<text>Considers [something].</text>
<conditions>
<condition>dobj.governor="consider"</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="all"/>
<type>dobj</type>
<text>Includes [something].</text>
<conditions>
<condition>dobj.governor="include"</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>auxpass/prep_in</type>
<text>Is used.</text>
<conditions>
<condition>auxpass.governor="use"</condition>
<condition>auxpass.dependent="be"</condition>
<condition>auxpass.governor=prep_in.governor</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>aux/auxpass</type>
<text>[auxiliary] be used.</text>
<conditions>
<condition>aux.governor="use"</condition>
<condition>aux.governor=auxpass.governor</condition>
<condition>auxpass.dependent="be"</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>nsubj/dobj</type>
<text>[something] has [something].</text>
<conditions>
<condition>nsubj.governor="have"</condition>
<condition>nsubj.governor=dobj.governor</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>nsubj/dobj</type>
<text>[something] detects [something].</text>
<conditions>
<condition>nsubj.governor="detect"</condition>
<condition>nsubj.governor=dobj.governor</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>aux/prep_from</type>
<text>To load.</text>
<conditions>
<condition>aux.governor="load"</condition>
<condition>aux.dependent="to"</condition>
<condition>aux.governor=prep_from.governor</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>dobj/aux</type>
<text>To use [something].</text>
<conditions>
<condition>dobj.governor="use"</condition>
<condition>dobj.governor=aux.governor</condition>
<condition>aux.dependent="to"</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>nsubj/xcomp</type>
<text>[something] supports.</text>
<conditions>
<condition>nsubj.governor="default support"</condition>
<condition>nsubj.governor=xcomp.governor</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>nsubj</type>
<text>[something] uses.</text>
<conditions>
<condition>nsubj.governor="support default use"</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>dobj/prepc_for/dobj</type>
<text>Adds support.</text>
<conditions>
<condition>dobj.governor="add"</condition>
<condition>dobj.dependent="support"</condition>
<condition>dobj.governor=prepc_for.governor</condition>
<condition>prepc_for.dependent="configure"</condition>
<condition>prepc_for.dependent=dobj.governor</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>dobj</type>
<text>Sets [something].</text>
<conditions>
<condition>dobj.governor="set"</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>nsubj/aux/neg</type>
<text>[something] do not apply.</text>
<conditions>
<condition>nsubj.governor="use apply"</condition>
<condition>nsubj.governor=aux.governor</condition>
<condition>aux.dependent="do"</condition>
<condition>aux.governor=neg.governor</condition>
<condition>neg.dependent="not"</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>nsubj/xcomp/aux</type>
<text>[something] to fail to load.</text>
<conditions>
<condition>nsubj.governor="fail"</condition>
<condition>nsubj.governor=xcomp.governor</condition>
<condition>xcomp.dependent="load"</condition>
<condition>xcomp.dependent=aux.governor</condition>
<condition>aux.dependent="to"</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>dobj</type>
<text>Provides security.</text>
<conditions>
<condition>dobj.governor="provide"</condition>
<condition>dobj.dependent="security"</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>dobj</type>
<text>Moves [something].</text>
<conditions>
<condition>dobj.governor="move"</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>aux/dobj/prep_from</type>
<text>To load [something].</text>
<conditions>
<condition>aux.governor="load"</condition>
<condition>aux.dependent="to"</condition>
<condition>aux.governor=dobj.governor</condition>
<condition>dobj.governor=prep_from.governor</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>prep_for/prep_in</type>
<text/>
<conditions>
<condition>prep_for.governor="support"</condition>
<condition>prep_for.dependent="template"</condition>
<condition>prep_for.governor=prep_in.governor</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>dobj</type>
<text>Detects [something].</text>
<conditions>
<condition>dobj.governor="notice detect"</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>aux/dobj</type>
<text>[auxiliary] detect [something].</text>
<conditions>
<condition>aux.governor="notice detect"</condition>
<condition>aux.governor=dobj.governor</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>aux/dobj</type>
<text>To provide [something].</text>
<conditions>
<condition>aux.governor="provide"</condition>
<condition>aux.dependent="to"</condition>
<condition>aux.governor=dobj.governor</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>dobj/prep_for</type>
<text>Adds [something].</text>
<conditions>
<condition>dobj.governor="add"</condition>
<condition>dobj.governor=prep_for.governor</condition>
<condition>prep_for.dependent="metric"</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>dobj</type>
<text>Enables [something].</text>
<conditions>
<condition>dobj.governor="enable"</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>aux/dobj</type>
<text>To specify [something].</text>
<conditions>
<condition>aux.governor="specify"</condition>
<condition>aux.dependent="to"</condition>
<condition>aux.governor=dobj.governor</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>xcomp/dobj</type>
<text>Considers [something] to use.</text>
<conditions>
<condition>xcomp.governor="consider"</condition>
<condition>xcomp.dependent="use"</condition>
<condition>xcomp.dependent=dobj.governor</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>ccomp</type>
<text>Makes.</text>
<conditions>
<condition>ccomp.governor="make"</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>nsubj/dobj</type>
<text>[something] stacks trace.</text>
<conditions>
<condition>nsubj.governor="stack"</condition>
<condition>nsubj.governor=dobj.governor</condition>
<condition>dobj.dependent="trace"</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>dobj/prep_to</type>
<text>Adds [something].</text>
<conditions>
<condition>dobj.governor="add"</condition>
<condition>dobj.governor=prep_to.governor</condition>
<condition>prep_to.dependent="indicator"</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>dobj</type>
<text>Optimizes [something].</text>
<conditions>
<condition>dobj.governor="optimize"</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>dobj/prep_of</type>
<text>Performs analysis.</text>
<conditions>
<condition>dobj.governor="perform"</condition>
<condition>dobj.dependent="analysis"</condition>
<condition>dobj.dependent=prep_of.governor</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>dobj/prepc_for</type>
<text>Provides mechanism.</text>
<conditions>
<condition>dobj.governor="provide"</condition>
<condition>dobj.dependent="mechanism"</condition>
<condition>dobj.governor=prepc_for.governor</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>aux/dobj</type>
<text>To allow [something].</text>
<conditions>
<condition>aux.governor="allow"</condition>
<condition>aux.dependent="to"</condition>
<condition>aux.governor=dobj.governor</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>aux/dobj</type>
<text>To notice [something].</text>
<conditions>
<condition>aux.governor="detect notice"</condition>
<condition>aux.dependent="to"</condition>
<condition>aux.governor=dobj.governor</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>aux/dobj</type>
<text>To set [something].</text>
<conditions>
<condition>aux.governor="set"</condition>
<condition>aux.dependent="to"</condition>
<condition>aux.governor=dobj.governor</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>dobj/vmod</type>
<text>Provides mechanism.</text>
<conditions>
<condition>dobj.governor="provide"</condition>
<condition>dobj.dependent="mechanism"</condition>
<condition>dobj.dependent=vmod.governor</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>dobj/prep_in</type>
<text>Provides [something].</text>
<conditions>
<condition>dobj.governor="provide"</condition>
<condition>dobj.governor=prep_in.governor</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>dobj</type>
<text>Provides default.</text>
<conditions>
<condition>dobj.governor="provide"</condition>
<condition>dobj.dependent="instance default"</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>dobj</type>
<text>Adds endpoint.</text>
<conditions>
<condition>dobj.governor="add"</condition>
<condition>dobj.dependent="endpoint"</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>dobj/xcomp</type>
<text>Provides [something].</text>
<conditions>
<condition>dobj.governor="provide"</condition>
<condition>dobj.governor=xcomp.governor</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>dobj/prep_with</type>
<text>Uses [something].</text>
<conditions>
<condition>dobj.governor="use"</condition>
<condition>dobj.governor=prep_with.governor</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>dobj</type>
<text>Provides endpoint.</text>
<conditions>
<condition>dobj.governor="provide"</condition>
<condition>dobj.dependent="endpoint"</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>dobj</type>
<text>Adds annotation.</text>
<conditions>
<condition>dobj.governor="add"</condition>
<condition>dobj.dependent="annotation"</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>dobj</type>
<text>Has [something].</text>
<conditions>
<condition>dobj.governor="have"</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>aux/dobj</type>
<text>[auxiliary] have [something].</text>
<conditions>
<condition>aux.governor="have"</condition>
<condition>aux.governor=dobj.governor</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>dobj/prep_from</type>
<text>Excludes [something].</text>
<conditions>
<condition>dobj.governor="exclude"</condition>
<condition>dobj.governor=prep_from.governor</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>nsubj/dobj</type>
<text>[something] applies [something].</text>
<conditions>
<condition>nsubj.governor="use apply"</condition>
<condition>nsubj.governor=dobj.governor</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>dobj</type>
<text>Runs application.</text>
<conditions>
<condition>dobj.governor="run"</condition>
<condition>dobj.dependent="application"</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>nsubj</type>
<text>^ excludes.</text>
<conditions>
<condition>nsubj.governor="exclude"</condition>
<condition>nsubj.dependent="^"</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>dobj</type>
<text>Uses stomp.</text>
<conditions>
<condition>dobj.governor="use"</condition>
<condition>dobj.dependent="custom stomp"</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>prep_in</type>
<text/>
<conditions>
<condition>prep_in.governor="file"</condition>
<condition>prep_in.dependent="livereload"</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>dobj</type>
<text>Provides way.</text>
<conditions>
<condition>dobj.governor="provide"</condition>
<condition>dobj.dependent="way"</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>dobj/prepc_by</type>
<text>Improves [something].</text>
<conditions>
<condition>dobj.governor="improve"</condition>
<condition>dobj.governor=prepc_by.governor</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>dobj</type>
<text>Exposes [something].</text>
<conditions>
<condition>dobj.governor="expose"</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>prep_of</type>
<text/>
<conditions>
<condition>prep_of.governor="analysis"</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>ccomp</type>
<text>Considers.</text>
<conditions>
<condition>ccomp.governor="consider"</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>dobj/prep_from</type>
<text>Removes [something].</text>
<conditions>
<condition>dobj.governor="remove"</condition>
<condition>dobj.governor=prep_from.governor</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>dobj/aux</type>
<text>[auxiliary] apply [something].</text>
<conditions>
<condition>dobj.governor="use apply"</condition>
<condition>dobj.governor=aux.governor</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>dobj</type>
<text>Provides default.</text>
<conditions>
<condition>dobj.governor="provide"</condition>
<condition>dobj.dependent="support default"</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>aux/dobj</type>
<text>[auxiliary] generate [something].</text>
<conditions>
<condition>aux.governor="generate"</condition>
<condition>aux.governor=dobj.governor</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>dobj/nsubj</type>
<text>[something] does [something].</text>
<conditions>
<condition>dobj.governor="make do"</condition>
<condition>dobj.governor=nsubj.governor</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>nsubj/aux</type>
<text>[something] [auxiliary] back.</text>
<conditions>
<condition>nsubj.governor="back"</condition>
<condition>nsubj.governor=aux.governor</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>prepc_from/dobj</type>
<text/>
<conditions>
<condition>prepc_from.governor="prevent"</condition>
<condition>prepc_from.governor=dobj.governor</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>xcomp</type>
<text>Makes to easier.</text>
<conditions>
<condition>xcomp.governor="make"</condition>
<condition>xcomp.dependent="easier"</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>dobj</type>
<text>Provides callback.</text>
<conditions>
<condition>dobj.governor="provide"</condition>
<condition>dobj.dependent="default callback"</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>prep_with</type>
<text/>
<conditions>
<condition>prep_with.governor="use work"</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>nsubj</type>
<text>[something] attributes.</text>
<conditions>
<condition>nsubj.governor="feature attribute"</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>dobj</type>
<text>Checks [something].</text>
<conditions>
<condition>dobj.governor="check"</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>prep_to</type>
<text/>
<conditions>
<condition>prep_to.governor="bind"</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>prep_of</type>
<text/>
<conditions>
<condition>prep_of.governor="initialization format"</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>vmod</type>
<text>[verb]s.</text>
<conditions>
<condition>vmod.governor="request"</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>prep_of</type>
<text/>
<conditions>
<condition>prep_of.governor="part"</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>dobj</type>
<text>Reads [something].</text>
<conditions>
<condition>dobj.governor="read"</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>dobj</type>
<text>Overhauls [something].</text>
<conditions>
<condition>dobj.governor="overhaul"</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>dobj</type>
<text>Decrypts [something].</text>
<conditions>
<condition>dobj.governor="decode decrypt"</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>prep_for</type>
<text/>
<conditions>
<condition>prep_for.governor="metadatum"</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>nsubj</type>
<text>[something] considers.</text>
<conditions>
<condition>nsubj.governor="consider"</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>prep_in</type>
<text/>
<conditions>
<condition>prep_in.governor="specify"</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>nsubj</type>
<text>[something] defaults.</text>
<conditions>
<condition>nsubj.governor="integration default"</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>nsubj</type>
<text>[something] needs.</text>
<conditions>
<condition>nsubj.governor="require need"</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>dobj</type>
<text>Confuses [something].</text>
<conditions>
<condition>dobj.governor="confuse"</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>prep_in</type>
<text/>
<conditions>
<condition>prep_in.governor="set"</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>vmod</type>
<text>[verb]s.</text>
<conditions>
<condition>vmod.governor="support"</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>nsubj</type>
<text>[something] shows.</text>
<conditions>
<condition>nsubj.governor="show"</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>dobj</type>
<text>Renders [something].</text>
<conditions>
<condition>dobj.governor="render"</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>nsubj</type>
<text>[something] defaults.</text>
<conditions>
<condition>nsubj.governor="deal default"</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>vmod</type>
<text>[verb]s.</text>
<conditions>
<condition>vmod.governor="use application"</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>prep_for</type>
<text/>
<conditions>
<condition>prep_for.governor="create"</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>dobj</type>
<text>Starts [something].</text>
<conditions>
<condition>dobj.governor="start"</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>prep_for</type>
<text/>
<conditions>
<condition>prep_for.governor="scan"</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>nsubj</type>
<text>[something] changes.</text>
<conditions>
<condition>nsubj.governor="default change"</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>nsubj</type>
<text>[something] passes.</text>
<conditions>
<condition>nsubj.governor="default pass"</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>prep_of</type>
<text/>
<conditions>
<condition>prep_of.governor="instance"</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>nsubj</type>
<text>[something] enables.</text>
<conditions>
<condition>nsubj.governor="enable"</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>dobj</type>
<text>Creates [something].</text>
<conditions>
<condition>dobj.governor="create"</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>aux</type>
<text>[auxiliary] show.</text>
<conditions>
<condition>aux.governor="show"</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>dobj</type>
<text>Passes [something].</text>
<conditions>
<condition>dobj.governor="pass"</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>aux</type>
<text>[auxiliary] read.</text>
<conditions>
<condition>aux.governor="read"</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
</heuristics>
