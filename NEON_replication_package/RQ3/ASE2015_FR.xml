<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE heuristics [
	<!ELEMENT heuristics (NLP_heuristic)*>
	<!ELEMENT NLP_heuristic (sentence?, type, text, conditions, sentence_class)>
	<!ELEMENT sentence EMPTY>
	<!ATTLIST sentence type (declarative|interrogative|all) #REQUIRED>
	<!ELEMENT type (#PCDATA)>
	<!ELEMENT text (#PCDATA)>
	<!ELEMENT conditions (condition)+>
	<!ELEMENT condition (#PCDATA)>
	<!ELEMENT sentence_class (#PCDATA)>
]>  
<!-- FEATURE REQUESTS -->

<heuristics>

<!-- id = FR_ASE2015_1 -->
<NLP_heuristic>
<type>nsubj/dobj/xcomp</type>
<text>[someone] expects [something] to work</text>
<conditions>
<condition>nsubj.governor="expect"</condition>
<condition>nsubj.governor=dobj.governor</condition>
<condition>dobj.governor=xcomp.governor</condition>
<condition>xcomp.dependent="work"</condition>
</conditions>
<sentence_class>FEATURE REQUEST</sentence_class>
</NLP_heuristic>

<!-- id = FR_ASE2015_2 -->
<NLP_heuristic>
<type>nsubj/dobj/xcomp</type>
<text>[someone] could/can/should create [something]</text>
<conditions>
<condition>nsubj.governor="create"</condition>
<condition>nsubj.governor=aux.governor</condition>
<condition>aux.dependent="ca can could should must might"</condition>
<condition>aux.governor=dobj.governor</condition>
</conditions>
<sentence_class>FEATURE REQUEST</sentence_class>
</NLP_heuristic>

<!-- id = FR_ASE2015_3 -->
<NLP_heuristic>
<type>nsubj/dobj/infmod</type>
<text>[someone] expects [something] to work</text>
<conditions>
<condition>nsubj.governor="expect"</condition>
<condition>nsubj.governor=dobj.governor</condition>
<condition>dobj.dependent=infmod.governor</condition>
<condition>infmod.dependent="work"</condition>
</conditions>
<sentence_class>FEATURE REQUEST</sentence_class>
</NLP_heuristic>

<!-- id = FR_ASE2015_4 -->
<NLP_heuristic>
<type>nsubj/aux</type>
<text>[someone] could/should add/provide/offer/integrate/configure [something]</text>
<conditions>
<condition>nsubj.governor="add provide offer integrate configure"</condition>
<condition>nsubj.governor=aux.governor</condition>
<condition>aux.dependent="could should can must"</condition>
</conditions>
<sentence_class>FEATURE REQUEST</sentence_class>
</NLP_heuristic>

<!-- id = FR_ASE2015_5 -->
<NLP_heuristic>
<type>nsubj/aux/xcomp/dobj</type>
<text>[someone] would love to see/use [something]</text>
<conditions>
<condition>nsubj.governor="love like"</condition>
<condition>nsubj.governor=aux.governor</condition>
<condition>aux.dependent="would"</condition>
<condition>aux.governor=xcomp.governor</condition>
<condition>xcomp.dependent="see use"</condition>
<condition>xcomp.dependent=dobj.governor</condition>
</conditions>
<sentence_class>FEATURE REQUEST</sentence_class>
</NLP_heuristic>

<!-- id = FR_ASE2015_6 -->
<NLP_heuristic>
<type>nsubj/ccomp/xcomp/dobj</type>
<text>[someone] think [something] would be [modal] to have [something]</text>
<conditions>
<condition>nsubj.governor="think"</condition>
<condition>nsubj.governor=ccomp.governor</condition>
<condition>ccomp.dependent=xcomp.governor</condition>
<condition>xcomp.dependent="have"</condition>
<condition>xcomp.dependent=dobj.governor</condition>
</conditions>
<sentence_class>FEATURE REQUEST</sentence_class>
</NLP_heuristic>

<!-- id = FR_ASE2015_7 -->
<NLP_heuristic>
<type>nsubj/ccomp/cop/advcl/mark</type>
<text>[someone] think [something] would be [modal] if [something]</text>
<conditions>
<condition>nsubj.governor="think"</condition>
<condition>nsubj.governor=ccomp.governor</condition>
<condition>ccomp.dependent=cop.governor</condition>
<condition>cop.governor=advcl.governor</condition>
<condition>advcl.dependent=mark.governor</condition>
</conditions>
<sentence_class>FEATURE REQUEST</sentence_class>
</NLP_heuristic>

<!-- id = FR_ASE2015_8 -->
<NLP_heuristic>
<type>nsubj/ccomp/aux</type>
<text>[someone] think [something] should be [something]</text>
<conditions>
<condition>nsubj.governor="think believe"</condition>
<condition>nsubj.governor=ccomp.governor</condition>
<condition>ccomp.dependent=aux.governor</condition>
<condition>aux.dependent="should must"</condition>
</conditions>
<sentence_class>FEATURE REQUEST</sentence_class>
</NLP_heuristic>

<!-- id = FR_ASE2015_9 -->
<NLP_heuristic>
<type>nsubj/aux/xcomp</type>
<text>[someone] should try to [something]</text>
<conditions>
<condition>nsubj.governor="try"</condition>
<condition>nsubj.governor=aux.governor</condition>
<condition>aux.dependent="should"</condition>
<condition>aux.governor=xcomp.governor</condition>
</conditions>
<sentence_class>FEATURE REQUEST</sentence_class>
</NLP_heuristic>

<!-- id = FR_ASE2015_10 -->
<NLP_heuristic>
<type>nsubj/ccomp/dobj</type>
<text>Let us implement [something]</text>
<conditions>
<condition>nsubj.governor="implement"</condition>
<condition>nsubj.dependent="us '"</condition>
<condition>nsubj.governor=ccomp.dependent</condition>
<condition>ccomp.governor="let"</condition>
<condition>ccomp.dependent=dobj.governor</condition>
</conditions>
<sentence_class>FEATURE REQUEST</sentence_class>
</NLP_heuristic>

<!-- id = FR_ASE2015_11 -->
<NLP_heuristic>
<type>nsubj/xcomp/auxpass</type>
<text>[something] needs to be [verb]</text>
<conditions>
<condition>nsubj.governor="need"</condition>
<condition>nsubj.governor=xcomp.governor</condition>
<condition>xcomp.dependent=auxpass.governor</condition>
<condition>auxpass.dependent="be"</condition>
</conditions>
<sentence_class>FEATURE REQUEST</sentence_class>
</NLP_heuristic>

<!-- id = FR_ASE2015_12 -->
<NLP_heuristic>
<type>auxpass/rcmod/nsubj</type>
<text>All that is needed is [something]</text>
<conditions>
<condition>auxpass.governor="need"</condition>
<condition>auxpass.dependent="be"</condition>
<condition>auxpass.governor=rcmod.dependent</condition>
<condition>rcmod.governor="all"</condition>
<condition>rcmod.governor=nsubj.dependent</condition>
</conditions>
<sentence_class>FEATURE REQUEST</sentence_class>
</NLP_heuristic>

<!-- id = FR_ASE2015_13 -->
<NLP_heuristic>
<type>nsubj/ccomp/dobj</type>
<text>[something] is what [someone] need</text>
<conditions>
<condition>nsubj.governor="be"</condition>
<condition>nsubj.governor=ccomp.governor</condition>
<condition>ccomp.dependent="need"</condition>
<condition>ccomp.dependent=dobj.governor</condition>
<condition>dobj.dependent="what"</condition>
</conditions>
<sentence_class>FEATURE REQUEST</sentence_class>
</NLP_heuristic>

<!-- id = FR_ASE2015_14 -->
<NLP_heuristic>
<type>nsubj/ccomp/dobj</type>
<text>Could we add [something]?</text>
<conditions>
<condition>nsubj.governor="add"</condition>
<condition>nsubj.governor=ccomp.dependent</condition>
<condition>ccomp.governor="could can"</condition>
<condition>ccomp.dependent=dobj.governor</condition>
</conditions>
<sentence_class>FEATURE REQUEST</sentence_class>
</NLP_heuristic>

<!-- id = FR_ASE2015_15 -->
<NLP_heuristic>
<type></type>
<text>[someone] think [something] is [modal] to [verb]</text>
<conditions>
<condition>nsubj.governor="think"</condition>
<condition>nsubj.governor=ccomp.governor</condition>
<condition>ccomp.dependent="good nice better"</condition>
<condition>ccomp.dependent=xcomp.governor</condition>
</conditions>
<sentence_class>FEATURE REQUEST</sentence_class>
</NLP_heuristic>

<!-- id = FR_ASE2015_16 -->
<NLP_heuristic>
<type>advmod/aux/neg/dobj</type>
<text>Why do not change [something]?</text>
<conditions>
<condition>advmod.governor="change"</condition>
<condition>advmod.dependent="why"</condition>
<condition>advmod.governor=aux.governor</condition>
<condition>aux.dependent="do"</condition>
<condition>aux.governor=neg.governor</condition>
<condition>neg.governor=dobj.governor</condition>
</conditions>
<sentence_class>FEATURE REQUEST</sentence_class>
</NLP_heuristic>

<!-- id = FR_ASE2015_17 -->
<NLP_heuristic>
<type>advmod/aux/nsubj/dobj</type>
<text>Why do not change [something]?</text>
<conditions>
<condition>advmod.governor="change"</condition>
<condition>advmod.dependent="why"</condition>
<condition>advmod.governor=aux.governor</condition>
<condition>aux.dependent="do"</condition>
<condition>aux.governor=nsubj.governor</condition>
<condition>nsubj.dependent="not"</condition>
<condition>nsubj.governor=dobj.governor</condition>
</conditions>
<sentence_class>FEATURE REQUEST</sentence_class>
</NLP_heuristic>

<!-- id = FR_ASE2015_18 -->
<NLP_heuristic>
<type>nsubjpass/aux/auxpass</type>
<text>[something] should be fixed</text>
<conditions>
<condition>nsubjpass.governor="fix"</condition>
<condition>nsubjpass.governor=aux.governor</condition>
<condition>aux.dependent="should"</condition>
<condition>aux.governor=auxpass.governor</condition>
<condition>auxpass.dependent="be"</condition>
</conditions>
<sentence_class>FEATURE REQUEST</sentence_class>
</NLP_heuristic>

<!-- id = FR_ASE2015_19 -->
<NLP_heuristic>
<type>nsubj/aux/cop/advcl/mark</type>
<text>It would be [modal] if [subject + verb]</text>
<conditions>
<condition>nsubj.governor="good better nice cool fine useful"</condition>
<condition>nsubj.governor=aux.governor</condition>
<condition>aux.dependent="would ' 'd"</condition>
<condition>aux.governor=cop.governor</condition>
<condition>cop.dependent="be"</condition>
<condition>cop.governor=advcl.governor</condition>
<condition>advcl.dependent=mark.governor</condition>
<condition>mark.dependent="if"</condition>
</conditions>
<sentence_class>FEATURE REQUEST</sentence_class>
</NLP_heuristic>

<!-- id = FR_ASE2015_20 -->
<NLP_heuristic>
<type>nsubj/aux/cop/xcomp</type>
<text>It would be [modal] to [verb]</text>
<conditions>
<condition>nsubj.governor="good better nice cool fine useful"</condition>
<condition>nsubj.governor=aux.governor</condition>
<condition>aux.dependent="would ' 'd could should"</condition>
<condition>aux.governor=cop.governor</condition>
<condition>cop.dependent="be"</condition>
<condition>cop.governor=xcomp.governor</condition>
</conditions>
<sentence_class>FEATURE REQUEST</sentence_class>
</NLP_heuristic>

<!-- id = FR_ASE2015_21 -->
<NLP_heuristic>
<type>aux/cop/xcomp</type>
<text>would be [modal] to [verb]</text>
<conditions>
<condition>aux.governor="good better nice cool fine useful"</condition>
<condition>aux.dependent="would ' 'd could should"</condition>
<condition>aux.governor=cop.governor</condition>
<condition>cop.dependent="be"</condition>
<condition>cop.governor=xcomp.governor</condition>
</conditions>
<sentence_class>FEATURE REQUEST</sentence_class>
</NLP_heuristic>

<!-- id = FR_ASE2015_22 -->
<NLP_heuristic>
<type>nsubj/xcomp/dobj</type>
<text>[someone] need to create [something]</text>
<conditions>
<condition>nsubj.governor="need"</condition>
<condition>nsubj.governor=xcomp.governor</condition>
<condition>xcomp.dependent="create"</condition>
<condition>xcomp.dependent=dobj.governor</condition>
</conditions>
<sentence_class>FEATURE REQUEST</sentence_class>
</NLP_heuristic>

<!-- id = FR_ASE2015_23 -->
<NLP_heuristic>
<type>nsubj/xcomp/nsubj</type>
<text>[someone] need a way to [verb]</text>
<conditions>
<condition>nsubj.governor="need"</condition>
<condition>nsubj.governor=xcomp.governor</condition>
<condition>xcomp.dependent=nsubj.governor</condition>
<condition>nsubj.dependent="way"</condition>
</conditions>
<sentence_class>FEATURE REQUEST</sentence_class>
</NLP_heuristic>

<!-- id = FR_ASE2015_24 -->
<NLP_heuristic>
<type>nsubjpass/auxpass</type>
<text>[something] is required</text>
<conditions>
<condition>nsubjpass.governor="require"</condition>
<condition>nsubjpass.governor=auxpass.governor</condition>
<condition>auxpass.dependent="be"</condition>
</conditions>
<sentence_class>FEATURE REQUEST</sentence_class>
</NLP_heuristic>

<!-- id = FR_ASE2015_25 -->
<NLP_heuristic>
<type>nsubj/aux/dobj</type>
<text>[something] could have [something]</text>
<conditions>
<condition>nsubj.governor="have"</condition>
<condition>nsubj.governor=aux.governor</condition>
<condition>aux.dependent="could should might may"</condition>
<condition>aux.governor=dobj.governor</condition>
</conditions>
<sentence_class>FEATURE REQUEST</sentence_class>
</NLP_heuristic>

<!-- id = FR_ASE2015_26 -->
<NLP_heuristic>
<type>nsubj/aux/cop/xcomp/dobj</type>
<text>It would be possible/beneficial to have [something]</text>
<conditions>
<condition>nsubj.governor="beneficial possible "</condition>
<condition>nsubj.governor=aux.governor</condition>
<condition>aux.dependent="would could should might may"</condition>
<condition>aux.governor=cop.governor</condition>
<condition>cop.dependent="be"</condition>
<condition>cop.governor=xcomp.governor</condition>
<condition>xcomp.dependent="have"</condition>
<condition>xcomp.dependent=dobj.governor</condition>
</conditions>
<sentence_class>FEATURE REQUEST</sentence_class>
</NLP_heuristic>

<!-- id = FR_ASE2015_27 -->
<NLP_heuristic>
<type>xcomp/dobj</type>
<text>Please remove/check [something]</text>
<conditions>
<condition>xcomp.governor="please"</condition>
<condition>xcomp.dependent="remove check"</condition>
<condition>xcomp.dependent=dobj.governor</condition>
</conditions>
<sentence_class>FEATURE REQUEST</sentence_class>
</NLP_heuristic>

<!-- id = FR_ASE2015_28 -->
<NLP_heuristic>
<type>dep/nsubj</type>
<text>Please remove/check [something]</text>
<conditions>
<condition>dep.dependent="please"</condition>
<condition>dep.governor="remove check"</condition>
<condition>dep.governor=nsubj.governor</condition>
</conditions>
<sentence_class>FEATURE REQUEST</sentence_class>
</NLP_heuristic>

<!-- id = FR_ASE2015_29 -->
<NLP_heuristic>
<type>nsubj/aux/ccomp/dobj</type>
<text>Can [someone] ask that [someone] create [something]?</text>
<conditions>
<condition>nsubj.governor="ask request"</condition>
<condition>nsubj.governor=aux.governor</condition>
<condition>aux.dependent="can could may might"</condition>
<condition>aux.governor=ccomp.governor</condition>
<condition>ccomp.dependent="create"</condition>
<condition>ccomp.dependent=dobj.governor</condition>
</conditions>
<sentence_class>FEATURE REQUEST</sentence_class>
</NLP_heuristic>

<!-- id = FR_ASE2015_30 -->
<NLP_heuristic>
<type>nsubj/aux/dobj</type>
<text>Could [something] fix [something]?</text>
<conditions>
<condition>nsubj.governor="fix"</condition>
<condition>nsubj.governor=aux.governor</condition>
<condition>aux.dependent="can could"</condition>
<condition>aux.governor=dobj.governor</condition>
</conditions>
<sentence_class>FEATURE REQUEST</sentence_class>
</NLP_heuristic>

<!-- id = FR_ASE2015_31 -->
<NLP_heuristic>
<type>nsubj/dobj</type>
<text>[something] requires [something]</text>
<conditions>
<condition>nsubj.governor="require requires"</condition>
<condition>not:nsubj.governor=aux.governor</condition>
<condition>nsubj.governor=dobj.governor</condition>
</conditions>
<sentence_class>FEATURE REQUEST</sentence_class>
</NLP_heuristic>

<!-- id = FR_ASE2015_32 -->
<NLP_heuristic>
<type>nsubj/xcomp</type>
<text>[something] requires [something]</text>
<conditions>
<condition>nsubj.governor="require requires"</condition>
<condition>not:nsubj.governor=aux.governor</condition>
<condition>nsubj.governor=xcomp.governor</condition>
</conditions>
<sentence_class>FEATURE REQUEST</sentence_class>
</NLP_heuristic>

<!-- id = FR_ASE2015_33 -->
<NLP_heuristic>
<type>nsubj/acomp</type>
<text>[something] requires [something]</text>
<conditions>
<condition>nsubj.governor="require requires"</condition>
<condition>not:nsubj.governor=aux.governor</condition>
<condition>nsubj.governor=acomp.governor</condition>
</conditions>
<sentence_class>FEATURE REQUEST</sentence_class>
</NLP_heuristic>

<!-- id = FR_ASE2015_34 -->
<NLP_heuristic>
<type>nsubjpass/aux/auxpass/prep</type>
<text>[something] should be treated in/as [something]</text>
<conditions>
<condition>nsubjpass.governor="treat"</condition>
<condition>nsubjpass.governor=aux.governor</condition>
<condition>aux.dependent="should"</condition>
<condition>aux.governor=auxpass.governor</condition>
<condition>auxpass.governor=prep_in.governor</condition>
</conditions>
<sentence_class>FEATURE REQUEST</sentence_class>
</NLP_heuristic>

<!-- id = FR_ASE2015_35 -->
<NLP_heuristic>
<type>nsubjpass/aux/auxpass/prep</type>
<text>[something] should be treated in/as [something]</text>
<conditions>
<condition>nsubjpass.governor="treat"</condition>
<condition>nsubjpass.governor=aux.governor</condition>
<condition>aux.dependent="should"</condition>
<condition>aux.governor=auxpass.governor</condition>
<condition>auxpass.governor=prep_as.governor</condition>
</conditions>
<sentence_class>FEATURE REQUEST</sentence_class>
</NLP_heuristic>

<!-- id = FR_ASE2015_36 -->
<NLP_heuristic>
<type>nsubj/ccomp/xcomp</type>
<text>[someone] think [something] need [verb]</text>
<conditions>
<condition>nsubj.governor="think believe"</condition>
<condition>nsubj.governor=ccomp.governor</condition>
<condition>ccomp.dependent="need"</condition>
<condition>ccomp.dependent=xcomp.governor</condition>
</conditions>
<sentence_class>FEATURE REQUEST</sentence_class>
</NLP_heuristic>

<!-- id = FR_ASE2015_37 -->
<NLP_heuristic>
<type>nsubj/aux/dobj</type>
<text>[something] should/could define/support [something]</text>
<conditions>
<condition>nsubj.governor="define support"</condition>
<condition>nsubj.governor=aux.governor</condition>
<condition>aux.dependent="could should might may can must"</condition>
<condition>aux.governor=dobj.governor</condition>
</conditions>
<sentence_class>FEATURE REQUEST</sentence_class>
</NLP_heuristic>

<!-- id = FR_ASE2015_38 -->
<NLP_heuristic>
<type>expl/ccomp</type>
<text>wish there was/were [something]</text>
<conditions>
<condition>expl.dependent="there"</condition>
<condition>expl.governor="be"</condition>
<condition>expl.governor=ccomp.dependent</condition>
<condition>ccomp.governor="wish"</condition>
</conditions>
<sentence_class>FEATURE REQUEST</sentence_class>
</NLP_heuristic>

<!-- id = FR_ASE2015_39 -->
<NLP_heuristic>
<type>nsubjpass/aux/auxpass</type>
<text>[something] should/could be [verb]</text>
<conditions>
<condition>nsubjpass.governor=aux.governor</condition>
<condition>aux.dependent="should must may might could"</condition>
<condition>aux.governor=auxpass.governor</condition>
</conditions>
<sentence_class>FEATURE REQUEST</sentence_class>
</NLP_heuristic>

<!-- id = FR_ASE2015_40 -->
<NLP_heuristic>
<type>dobj</type>
<text>add [something]</text>
<conditions>
<condition>dobj.governor="add"</condition>
<condition>not:dobj.governor=aux.governor</condition>
</conditions>
<sentence_class>FEATURE REQUEST</sentence_class>
</NLP_heuristic>

<!-- id = FR_ASE2015_41 -->
<NLP_heuristic>
<type>nsubj/rcmod</type>
<text>all [someone] need is [something]</text>
<conditions>
<condition>nsubj.governor="be"</condition>
<condition>nsubj.dependent="all"</condition>
<condition>nsubj.dependent=rcmod.governor</condition>
<condition>rcmod.dependent="need"</condition>
</conditions>
<sentence_class>FEATURE REQUEST</sentence_class>
</NLP_heuristic>

<!-- id = FR_ASE2015_42 -->
<NLP_heuristic>
<type>nsubj/dobj</type>
<text>[something] requests [something]</text>
<conditions>
<condition>nsubj.governor="request"</condition>
<condition>nsubj.governor=dobj.governor</condition>
</conditions>
<sentence_class>FEATURE REQUEST</sentence_class>
</NLP_heuristic>

<!-- id = FR_ASE2015_43 -->
<NLP_heuristic>
<type>nsubj/ccomp</type>
<text>[something] requests [something]</text>
<conditions>
<condition>nsubj.governor="request"</condition>
<condition>nsubj.governor=ccomp.governor</condition>
</conditions>
<sentence_class>FEATURE REQUEST</sentence_class>
</NLP_heuristic>

<!-- id = FR_ASE2015_44 -->
<NLP_heuristic>
<type>nsubj/xcomp</type>
<text>[something] requests [something]</text>
<conditions>
<condition>nsubj.governor="request"</condition>
<condition>nsubj.governor=xcomp.governor</condition>
</conditions>
<sentence_class>FEATURE REQUEST</sentence_class>
</NLP_heuristic>

<!-- id = FR_ASE2015_45 -->
<NLP_heuristic>
<type>nsubj/aux/dobj</type>
<text>[something] should/could include [something]</text>
<conditions>
<condition>nsubj.governor="include"</condition>
<condition>nsubj.governor=aux.governor</condition>
<condition>aux.dependent="should could must might"</condition>
<condition>aux.governor=dobj.governor</condition>
</conditions>
<sentence_class>FEATURE REQUEST</sentence_class>
</NLP_heuristic>

<!-- id = FR_ASE2015_46 -->
<NLP_heuristic>
<type>nsubj/xcomp/cop</type>
<text>[something] ought to be [somehow]</text>
<conditions>
<condition>nsubj.governor="ought"</condition>
<condition>nsubj.governor=xcomp.governor</condition>
<condition>xcomp.dependent=cop.governor</condition>
</conditions>
<sentence_class>FEATURE REQUEST</sentence_class>
</NLP_heuristic>

<!-- id = FR_ASE2015_47 -->
<NLP_heuristic>
<type>nsubj/xcomp/cop</type>
<text>[someone] want/like to have [something]</text>
<conditions>
<condition>nsubj.governor="want like"</condition>
<condition>nsubj.governor=xcomp.governor</condition>
<condition>xcomp.dependent="have"</condition>
<condition>xcomp.dependent=dobj.governor</condition>
</conditions>
<sentence_class>FEATURE REQUEST</sentence_class>
</NLP_heuristic>

<!-- id = FR_ASE2015_48 -->
<NLP_heuristic>
<type>nsubj/dobj</type>
<text>[something] needs [something]</text>
<conditions>
<condition>nsubj.governor="need"</condition>
<condition>not:nsubj.governor=aux.governor</condition>
<condition>nsubj.governor=dobj.governor</condition>
</conditions>
<sentence_class>FEATURE REQUEST</sentence_class>
</NLP_heuristic>

<!-- id = FR_ASE2015_49 -->
<NLP_heuristic>
<type>nsubj/xcomp</type>
<text>[something] needs [something]</text>
<conditions>
<condition>nsubj.governor="need"</condition>
<condition>not:nsubj.governor=aux.governor</condition>
<condition>nsubj.governor=xcomp.governor</condition>
</conditions>
<sentence_class>FEATURE REQUEST</sentence_class>
</NLP_heuristic>


</heuristics>
