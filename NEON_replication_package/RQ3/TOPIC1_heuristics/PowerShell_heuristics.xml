<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<heuristics>
<NLP_heuristic>
<sentence type="declarative"/>
<type>nsubj/aux/neg/prep_with</type>
<text>[something] do not work.</text>
<conditions>
<condition>nsubj.governor="work"</condition>
<condition>nsubj.governor=aux.governor</condition>
<condition>aux.dependent="do"</condition>
<condition>aux.governor=neg.governor</condition>
<condition>neg.dependent="n't"</condition>
<condition>neg.governor=prep_with.governor</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>nsubj/aux/dobj</type>
<text>[something] should support [something].</text>
<conditions>
<condition>nsubj.governor="support"</condition>
<condition>nsubj.governor=aux.governor</condition>
<condition>aux.dependent="should"</condition>
<condition>aux.governor=dobj.governor</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>aux/neg/prep_with/nsubj</type>
<text>[something] do not work.</text>
<conditions>
<condition>aux.governor="work"</condition>
<condition>aux.dependent="do"</condition>
<condition>aux.governor=neg.governor</condition>
<condition>neg.governor=prep_with.governor</condition>
<condition>prep_with.governor=nsubj.governor</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>nsubj/aux/dobj</type>
<text>[something] [auxiliary] support [something].</text>
<conditions>
<condition>nsubj.governor="support"</condition>
<condition>nsubj.governor=aux.governor</condition>
<condition>aux.governor=dobj.governor</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>nsubj/dobj</type>
<text>[something] has [something].</text>
<conditions>
<condition>nsubj.governor="have"</condition>
<condition>nsubj.governor=dobj.governor</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>aux/neg/nsubj</type>
<text>[something] do not support.</text>
<conditions>
<condition>aux.governor="support"</condition>
<condition>aux.dependent="do"</condition>
<condition>aux.governor=neg.governor</condition>
<condition>neg.governor=nsubj.governor</condition>
<condition>nsubj.dependent=nsubj.governor</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>aux/neg/nsubj</type>
<text>[something] do not work.</text>
<conditions>
<condition>aux.governor="work"</condition>
<condition>aux.dependent="do"</condition>
<condition>aux.governor=neg.governor</condition>
<condition>neg.dependent="not"</condition>
<condition>neg.governor=nsubj.governor</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>prep_with</type>
<text/>
<conditions>
<condition>prep_with.governor="use work"</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>dobj</type>
<text>Causes [something].</text>
<conditions>
<condition>dobj.governor="cause"</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>nsubj/aux/dobj</type>
<text>[something] [auxiliary] support [something].</text>
<conditions>
<condition>nsubj.governor="support"</condition>
<condition>nsubj.dependent=nsubj.governor</condition>
<condition>nsubj.governor=aux.governor</condition>
<condition>aux.governor=dobj.governor</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>nsubj/prep_on</type>
<text>[something] fails.</text>
<conditions>
<condition>nsubj.governor="fail"</condition>
<condition>nsubj.governor=prep_on.governor</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>aux/dobj</type>
<text>[auxiliary] load class.</text>
<conditions>
<condition>aux.governor="load"</condition>
<condition>aux.governor=dobj.governor</condition>
<condition>dobj.dependent="class"</condition>
<condition>dobj.governor="use"</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>nsubj/prep_with/prep_on</type>
<text>[something] fails.</text>
<conditions>
<condition>nsubj.governor="fail"</condition>
<condition>nsubj.governor=prep_with.governor</condition>
<condition>prep_with.dependent="nullreferenceexception"</condition>
<condition>prep_with.governor=prep_on.governor</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>aux/nsubj</type>
<text>[something] [auxiliary] support.</text>
<conditions>
<condition>aux.governor="support"</condition>
<condition>aux.governor=nsubj.governor</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>neg</type>
<text/>
<conditions>
<condition>neg.governor="work"</condition>
<condition>neg.dependent="not"</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>nsubj/dobj</type>
<text>[something] returns [something].</text>
<conditions>
<condition>nsubj.governor="return"</condition>
<condition>nsubj.governor=dobj.governor</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>dobj</type>
<text>Throws [something].</text>
<conditions>
<condition>dobj.governor="throw"</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>nsubj/dobj</type>
<text>[something] throws [something].</text>
<conditions>
<condition>nsubj.governor="throw"</condition>
<condition>nsubj.governor=dobj.governor</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>neg</type>
<text/>
<conditions>
<condition>neg.governor="honor honour"</condition>
<condition>neg.dependent="not"</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>nsubj/aux</type>
<text>[something] [auxiliary] recurse.</text>
<conditions>
<condition>nsubj.governor="recurse"</condition>
<condition>nsubj.governor=aux.governor</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>dobj</type>
<text>Tabs [something].</text>
<conditions>
<condition>dobj.governor="tab"</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>nsubj/dobj</type>
<text>[something] gives [something].</text>
<conditions>
<condition>nsubj.governor="give"</condition>
<condition>nsubj.governor=dobj.governor</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>nsubj</type>
<text>[something] shows.</text>
<conditions>
<condition>nsubj.governor="show"</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>nsubj</type>
<text>[something] contains.</text>
<conditions>
<condition>nsubj.governor="contain"</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>ccomp</type>
<text>Tests.</text>
<conditions>
<condition>ccomp.governor="test"</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>dobj</type>
<text>Calls [something].</text>
<conditions>
<condition>dobj.governor="call"</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>prep_with</type>
<text/>
<conditions>
<condition>prep_with.governor="file"</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>xcomp</type>
<text>Fails.</text>
<conditions>
<condition>xcomp.governor="fail"</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>prep_in</type>
<text/>
<conditions>
<condition>prep_in.governor="result"</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>dobj</type>
<text>Gets [something].</text>
<conditions>
<condition>dobj.governor="get"</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>prep_with</type>
<text/>
<conditions>
<condition>prep_with.governor="start"</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>nsubj</type>
<text>[something] needs.</text>
<conditions>
<condition>nsubj.governor="lack need"</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>dobj</type>
<text>Needs [something].</text>
<conditions>
<condition>dobj.governor="lack need"</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>nsubj</type>
<text>[something] files.</text>
<conditions>
<condition>nsubj.governor="file"</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>dobj</type>
<text>Adds [something].</text>
<conditions>
<condition>dobj.governor="add"</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>dobj</type>
<text>Allows [something].</text>
<conditions>
<condition>dobj.governor="allow"</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>dobj</type>
<text>Fixes [something].</text>
<conditions>
<condition>dobj.governor="fix"</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>nsubj</type>
<text>[something] exists.</text>
<conditions>
<condition>nsubj.governor="exist"</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
<NLP_heuristic>
<sentence type="declarative"/>
<type>prep_on</type>
<text/>
<conditions>
<condition>prep_on.governor="work"</condition>
</conditions>
<sentence_class/>
</NLP_heuristic>
</heuristics>
